"""2024-02-26T01:07:05.043220

Revision ID: 4785abde7d85
Revises: 
Create Date: 2024-02-26 01:07:05.322100

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "4785abde7d85"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "subject",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("is_moderated", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_table(
        "summary",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("university_id", sa.Integer(), nullable=False),
        sa.Column("subject_id", sa.Integer(), nullable=False),
        sa.Column("teacher_id", sa.UUID(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("rejected", "on_moderation", "approved", name="status"),
            nullable=False,
        ),
        sa.Column("moderation_comment", sa.Text(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_table(
        "university",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("short_name", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_table(
        "lecture",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=False),
        sa.Column("pdf_file_url", sa.String(length=500), nullable=False),
        sa.Column("video_url", sa.String(length=500), nullable=True),
        sa.Column("summary_id", sa.UUID(), nullable=False),
        sa.Column("date", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["summary_id"],
            ["public.summary.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_table(
        "teacher",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("full_name", sa.String(length=255), nullable=False),
        sa.Column("date_birth", sa.Date(), nullable=True),
        sa.Column("university_id", sa.Integer(), nullable=False),
        sa.Column("subject_ids", sa.ARRAY(sa.Integer()), nullable=False),
        sa.Column("is_moderated", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["university_id"],
            ["public.university.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="public",
    )
    op.create_index(
        op.f("ix_public_teacher_full_name"),
        "teacher",
        ["full_name"],
        unique=False,
        schema="public",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_public_teacher_full_name"), table_name="teacher", schema="public"
    )
    op.drop_table("teacher", schema="public")
    op.drop_table("lecture", schema="public")
    op.drop_table("university", schema="public")
    op.drop_table("summary", schema="public")
    op.drop_table("subject", schema="public")
    # ### end Alembic commands ###
